下面所有指令都默认在liux或终端内允许
    绝对路径：从根目录开始一直到目标文件的路径（/），以/开头，表示从根目录开始，必须从根目录开始，否则无法找到文件
    相对路径：从当前目录开始到目标文件的路径（./），以./开头，表示从当前目录开始，以../开头，表示从上一层目录开始，../../表示从上两层目录开始，以此类推
    https://www.bilibili.com/video/BV1ca411x7rZ/?spm_id_from=333.337.search-card.all.click&vd_source=07ad793678d0663c016c43b1de8525e9
    隐式相对路径：在环境变量中的路径，可以直接调用，无需添加./ 或者../
    显式相对路径：在环境变量中的路径，但是需要添加./ 或者../
    /程序名 可以直接打开/调用程序
    /程序名/程序名/。。。。 可以调用指定路径下的程序，可以无限叠加只要路径存在
    cd 用于切换目录，因为在某些目录下的所需程序并不存在于环境变量中，所以需要切换到指定目录下，后运行程序
    此时无论是绝对路径还是相对路径都可以使用，只要路径存在即可

cat--一个命令 用于读取文件
    cat能够直接读取当前目录下的文件，也可以通过添加/ 或者../来读取其他目录下的文件
    cat可以添加绝对路径去访问文件，而不需要cd去更改目录
grep--查找命令，格式为 grep 文本 路径
ls--列举命令，列举当前目录下所有文件
touch--创建命令，格式为 touch 路径
rm--删除命令，格式为 rm 路径
ls -a --列举命令，列举当前目录下所有文件，包括隐藏文件,liux 会将带有.的文件视为隐藏文件，只有此代码可以查看
mkdir--在此目录下创建文件夹，格式为 mkdir 文件夹名
find--寻找指定文件
    --find / -name 文件名 从根目录开始寻找文件，查找全局文件
    --find ./ -name 文件名 从当前目录开始寻找文件，查找局部文件
ln--创建链接（https://www.bilibili.com/video/BV1G14y1i7WZ/?spm_id_from=333.337.search-card.all.click&vd_source=07ad793678d0663c016c43b1de8525e9）
    所有的文件都存在一个inode节点，inode节点存储了文件的所有信息，包括文件的大小，文件的权限，文件的拥有者，文件的创建时间等等
硬链接-- 我们所创建的文件的文件名就是一个链接，用于连接点inode节点，类似与c语言中的指针，可以多个文件名同时指向一个inode节点，也就意味着多个文件所导向的文件内容是相同的，也就意味着修改一个文件名下所对应的文件内容，会使得所有指向此文件内容的文件名所对应的文件内容也发生改变
    当删除一个文件名的时候，只是删除了文件名，而并不是文件内容，只要指向此文件的inode不为0，则文件内容不会被删除，删除的只是一个硬链接，而不是文件本身
    只有文件的链接被称为硬链接
软连接--符号链接
  